openapi: 3.0.3
info:
  title: Library API
  version: 1.1.0
  description: STD22001
servers:
  - url: https://library.com
tags:
  - Books
  - Authors 
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateMin
          description: If 'releaseDateMax' is note provide,'releaseDateMin' is ignored 'releaseDateMax' can not be after 'releaseDateMin'
          schema:
            type: string
            format: date
          required: false
        - in: query
          name: releaseDateMax
          description: If 'releaseDateMin' is note provide,'releaseDateMax' is ignored 'releaseDateMin' can not be after 'releaseDateMax'
          schema:
            type: string
            format: date
          required: false
    
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - Books
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /books/{bookId}/authors/{authorId} :
    put:
      tags:
        - Books
      summary: create or update book
      description: This operation create or update author of the book by specification id.
      operationId: crupdateBookAuthor
      parameters:
        - in: query
          name: bookId
          description: Create books by given bookId
          required: false
          schema:
            type: string
        - in: query
          name: authorId
          description: Create  books by given authorId
          schema:
            type: string
          required: false
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrupdateBooks'
  /books/authors  :
    put:
      tags:
        - Books
      summary: Get book
      description: The returned books are ordered by updated datetime. 
      
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateBooks'
    
  /authors:
     get:
      summary: Get author by name
      description:  Retrieve a list of authors, optionally filtered by name.
      operationId: getByAuthorName
      tags:
        - Authors
      parameters:
        - in: query
          name: name
          description: Name to filter authors
          required: false
          schema:
            type: string
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
     put:
      tags:
          - Authors
      summary: Create or update a list of authors
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
  /authors/{aId}: 
    delete:
      summary: Delete an author
      operationId: deleteAuthor
      tags:
          - Authors
      parameters:
        - name: aId
          in: path
          description: Author identity to be delete
          schema:
            type: string
          required: true
      responses:
        200:
          description: Author deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'

    
components:
  schemas:
    Book:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/Author'
      allOf:
        - $ref: '#/components/schemas/CrupdateBooks'
     
    
    Author:
      type: object
      properties:
        id:
          type: string
        name: 
          type: string
        sex:
         $ref: '#/components/schemas/Sex'
    Sex:
        type: string
        enum:
            - M
            - F  
    Topic:
        type: string
        enum:
            - ROMANCE
            - COMEDY
            - OTHER
    Page:
      type: integer
      description: Start at `1`
    PageSize:
      type: integer
      description: Cannot exceed `500`
    CrupdateBooks: 
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        topic:
            $ref: '#/components/schemas/Topic'
        
        pageNumbers:
          $ref: '#/components/schemas/PageSize'
        releaseDate:
          type: string
          format: date
    UpdateBooks:
      type: object
      properties:
        bookId:
          type: string
        authorId: 
          type: string
